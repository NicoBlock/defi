{"version":3,"sources":["getWeb3.js","components/RegisterVoters.js","components/SendProposal.js","components/OpenVoteSession.js","components/VoteForProposal.js","components/TallyVotes.js","components/SeeWinner.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","RegisterVoters","createVoter","event","preventDefault","address","value","props","registerToVote","owner","this","user","className","style","display","justifyContent","Card","width","Header","Body","Form","Group","Control","type","id","placeholder","ref","input","Button","onClick","variant","openProposalRegistration","block","disabled","Component","SendProposal","createProposition","description","sendProposition","closeProposalRegistration","OpenVoteSession","openVoteSession","VoteForProposal","generateVote","proposalID","voteForProposal","closeVoteSession","TallyVotes","countVotes","SeeWinner","winningProposalId","desc","nbrVotes","App","state","accounts","contract","voterAddress","status","proposalId","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","Voting","networks","instance","Contract","abi","setState","runInit","alert","error","methods","call","getStatus","getPropositionDescription","getProposalId","getNumberOfVotes","getWinningProposalId","events","VoterRegistered","on","cbRegisterEvent","ProposalRegistered","cbProposalRegisteredEvent","Voted","cbVotedEvent","switchStatus","parseInt","send","from","returnValues","sendYourProposition","voteFor","showWinner","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d132cd3a.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nclass RegisterVoters extends Component {\n  createVoter = (event) => {\n    event.preventDefault();\n    const address = this.address.value;\n    this.props.registerToVote(address);\n    this.address.value = \"\";\n  };\n\n  render() {\n    const owner = this.props.owner;\n    const user = this.props.user;\n    return (\n      <div className=\"Vote\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Ajout de comptes pour propositions et votes</strong>\n            </Card.Header>\n            <Card.Body>\n              <p>L'enregistrement des propositions n'est pas encore ouvert.</p>\n              <p>Veuillez attendre que les autorisations soient données.</p>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  id=\"address\"\n                  placeholder=\"Adresse à autoriser\"\n                  ref={(input) => {\n                    this.address = input;\n                  }}\n                />\n              </Form.Group>\n              <Button onClick={this.createVoter} variant=\"primary\">\n                Autoriser\n              </Button>\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>\n                Passer à la session d'enregistrement des propositions\n              </strong>\n            </Card.Header>\n            <Card.Body>\n              {user === owner ? (\n                <Button\n                  onClick={this.props.openProposalRegistration}\n                  variant=\"danger\"\n                  block\n                >\n                  Ouvrir la session d'enregistrement de propositions\n                </Button>\n              ) : (\n                <Button\n                  onClick={this.props.openProposalRegistration}\n                  variant=\"danger\"\n                  block\n                  disabled\n                >\n                  Ouvrir la session d'enregistrement de propositions\n                </Button>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default RegisterVoters;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nclass SendProposal extends Component {\n  createProposition = (event) => {\n    event.preventDefault();\n    const description = this.description.value;\n    this.props.sendProposition(description);\n    this.description.value = \"\";\n  };\n\n  render() {\n    const owner = this.props.owner;\n    const user = this.props.user;\n    return (\n      <div className=\"Vote\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Enregistrement de proposition</strong>\n            </Card.Header>\n            <Card.Body>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  id=\"description\"\n                  placeholder=\"Saisissez votre proposition\"\n                  ref={(input) => {\n                    this.description = input;\n                  }}\n                />\n              </Form.Group>\n              <Button onClick={this.createProposition} variant=\"primary\">\n                Envoyer\n              </Button>\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Passer à la session de votes</strong>\n            </Card.Header>\n            <Card.Body>\n              {user === owner ? (\n                <Button\n                  onClick={this.props.closeProposalRegistration}\n                  variant=\"danger\"\n                  block\n                >\n                  Fermer la session d'enregistrement de propositions\n                </Button>\n              ) : (\n                <Button\n                  onClick={this.props.closeProposalRegistration}\n                  variant=\"danger\"\n                  block\n                  disabled\n                >\n                  Fermer la session d'enregistrement de propositions\n                </Button>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default SendProposal;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nclass OpenVoteSession extends Component {\n  render() {\n    const owner = this.props.owner;\n    const user = this.props.user;\n    return (\n      <div className=\"Vote\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Prochaine session : Votes</strong>\n            </Card.Header>\n            <Card.Body>\n              <p>\n                Les envois de propositions sont terminés.<br></br>\n                Veuillez attendre que l'administrateur ouvre la session de\n                votes.\n              </p>\n              {user === owner ? (\n                <Button\n                  onClick={this.props.openVoteSession}\n                  variant=\"warning\"\n                  block\n                >\n                  Ouvrir la session de votes\n                </Button>\n              ) : (\n                <Button\n                  onClick={this.props.openVoteSession}\n                  variant=\"warning\"\n                  block\n                  disabled\n                >\n                  Ouvrir la session de votes\n                </Button>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default OpenVoteSession;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nclass VoteForProposal extends Component {\n  generateVote = (event) => {\n    event.preventDefault();\n    const proposalID = this.proposalID.value;\n    this.props.voteForProposal(proposalID);\n    this.proposalID.value = \"\";\n  };\n\n  render() {\n    const owner = this.props.owner;\n    const user = this.props.user;\n    return (\n      <div className=\"Vote\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Votez pour une proposition</strong>\n            </Card.Header>\n            <Card.Body>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  id=\"proposalID\"\n                  placeholder=\"ID de la proposition\"\n                  ref={(input) => {\n                    this.proposalID = input;\n                  }}\n                />\n              </Form.Group>\n              <Button onClick={this.generateVote} variant=\"primary\">\n                Voter\n              </Button>\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Passer au comptage des votes</strong>\n            </Card.Header>\n            <Card.Body>\n              {user === owner ? (\n                <Button\n                  onClick={this.props.closeVoteSession}\n                  variant=\"danger\"\n                  block\n                >\n                  Terminer la session de votes\n                </Button>\n              ) : (\n                <Button\n                  onClick={this.props.closeVoteSession}\n                  variant=\"danger\"\n                  block\n                  disabled\n                >\n                  Terminer la session de votes\n                </Button>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default VoteForProposal;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nclass TallyVotes extends Component {\n  render() {\n    const owner = this.props.owner;\n    const user = this.props.user;\n    return (\n      <div className=\"Vote\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Comptage des votes</strong>\n            </Card.Header>\n            <Card.Body>\n              <p>La session de vote est terminée.</p>\n              <p>\n                Veuillez attendre que l'administrateur définisse la proposition\n                remportant le plus de votes.\n              </p>\n              {user === owner ? (\n                <Button onClick={this.props.countVotes} variant=\"danger\" block>\n                  Compatabiliser les votes\n                </Button>\n              ) : (\n                <Button\n                  onClick={this.props.countVotes}\n                  variant=\"danger\"\n                  block\n                  disabled\n                >\n                  Comptabiliser les votes\n                </Button>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default TallyVotes;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\n\nclass SeeWinner extends Component {\n  render() {\n    return (\n      <div className=\"Vote\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Card style={{ width: \"50rem\" }}>\n            <Card.Header>\n              <strong>Résultats</strong>\n            </Card.Header>\n            <Card.Body>\n              <p>\n                l'ID de la propositon est <b>{this.props.winningProposalId}</b>.\n              </p>\n              <p>\n                La proposition est <b>{this.props.desc}</b>.\n              </p>\n              <p>\n                Gagnante avec <b>{this.props.nbrVotes}</b> votes.\n              </p>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SeeWinner;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Voting from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\nimport RegisterVoters from \"./components/RegisterVoters\";\nimport SendProposal from \"./components/SendProposal\";\nimport OpenVoteSession from \"./components/OpenVoteSession\";\nimport VoteForProposal from \"./components/VoteForProposal\";\nimport TallyVotes from \"./components/TallyVotes\";\nimport SeeWinner from \"./components/SeeWinner\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    web3: null,\n    accounts: null,\n    contract: null,\n    owner: null,\n    user: null,\n    voterAddress: 0,\n    status: 0,\n    desc: \"\",\n    proposalId: 0,\n    nbrVotes: 0,\n    winningProposalId: 0,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = Voting.networks[networkId];\n      const instance = new web3.eth.Contract(\n        Voting.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      this.setState({ web3, accounts, contract: instance }, this.runInit);\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  runInit = async () => {\n    const { contract } = this.state;\n    const owner = await contract.methods.owner().call();\n    const user = this.state.accounts[0];\n    const status = await contract.methods.getStatus().call();\n    const desc = await contract.methods.getPropositionDescription().call();\n    const proposalId = await contract.methods.getProposalId().call();\n    const nbrVotes = await contract.methods.getNumberOfVotes().call();\n    const winningProposalId = await contract.methods\n      .getWinningProposalId()\n      .call();\n    this.setState({\n      owner,\n      user,\n      status,\n      desc,\n      proposalId,\n      nbrVotes,\n      winningProposalId,\n    });\n\n    contract.events\n      .VoterRegistered()\n      .on(\"data\", (event) => this.cbRegisterEvent(event))\n      .on(\"error\", console.error);\n\n    contract.events\n      .ProposalRegistered()\n      .on(\"data\", (event) => this.cbProposalRegisteredEvent(event))\n      .on(\"error\", console.error);\n\n    contract.events\n      .Voted()\n      .on(\"data\", (event) => this.cbVotedEvent(event))\n      .on(\"error\", console.error);\n  };\n\n  switchStatus = async () => {\n    const { status } = this.state;\n    let switchStatus = status;\n    switchStatus = parseInt(status) + 1;\n    this.setState({ status: +switchStatus });\n  };\n\n  registerToVote = async (address) => {\n    const { accounts, contract } = this.state;\n    await contract.methods.registerToVote(address).send({ from: accounts[0] });\n  };\n\n  cbRegisterEvent = async (event) => {\n    this.setState({ voterAddress: event.returnValues[0] });\n    console.log(`added: ${this.state.voterAddress} to the list`);\n  };\n\n  openProposalRegistration = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods\n      .openProposalRegistration()\n      .send({ from: accounts[0] });\n    this.switchStatus();\n  };\n\n  sendProposition = async (description) => {\n    const { accounts, contract } = this.state;\n    await contract.methods\n      .sendYourProposition(description)\n      .send({ from: accounts[0] });\n  };\n\n  cbProposalRegisteredEvent = async (event) => {\n    this.setState({ proposalId: event.returnValues[0] });\n  };\n\n  closeProposalRegistration = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods\n      .closeProposalRegistration()\n      .send({ from: accounts[0] });\n    this.switchStatus();\n  };\n\n  openVoteSession = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods.openVoteSession().send({ from: accounts[0] });\n    this.switchStatus();\n  };\n\n  voteForProposal = async (proposalId) => {\n    const { accounts, contract } = this.state;\n    await contract.methods.voteFor(proposalId).send({ from: accounts[0] });\n  };\n\n  cbVotedEvent = async (event) => {\n    this.setState({ proposalId: event.returnValues[1] });\n  };\n\n  closeVoteSession = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods.closeVoteSession().send({ from: accounts[0] });\n    this.switchStatus();\n  };\n\n  countVotes = async () => {\n    const { accounts, contract } = this.state;\n    await contract.methods.countVotes().send({ from: accounts[0] });\n    this.switchStatus();\n  };\n\n  showWinner = async () => {\n    const { winningProposalId, desc } = this.state;\n    this.setState({ winningProposalId, desc });\n  };\n\n  render() {\n    const { status } = this.state;\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <div>\n          <h2 className=\"text-center\">Système de vote</h2>\n          <hr></hr>\n          <br></br>\n        </div>\n        {status === \"0\" ? (\n          <RegisterVoters\n            registerToVote={this.registerToVote}\n            owner={this.state.owner}\n            user={this.state.user}\n            openProposalRegistration={this.openProposalRegistration}\n          />\n        ) : status === \"1\" ? (\n          <SendProposal\n            sendProposition={this.sendProposition}\n            owner={this.state.owner}\n            user={this.state.user}\n            closeProposalRegistration={this.closeProposalRegistration}\n          />\n        ) : status === \"2\" ? (\n          <OpenVoteSession\n            openVoteSession={this.openVoteSession}\n            owner={this.state.owner}\n            user={this.state.user}\n          />\n        ) : status === \"3\" ? (\n          <VoteForProposal\n            voteForProposal={this.voteForProposal}\n            closeVoteSession={this.closeVoteSession}\n            owner={this.state.owner}\n            user={this.state.user}\n          />\n        ) : status === \"4\" ? (\n          <TallyVotes\n            countVotes={this.countVotes}\n            owner={this.state.owner}\n            user={this.state.user}\n          />\n        ) : (\n          <SeeWinner\n            winningProposalId={this.state.winningProposalId}\n            desc={this.state.desc}\n            nbrVotes={this.state.nbrVotes}\n          />\n        )}\n        <br></br>\n        <div>Adresse connectée: {this.state.user}</div>\n        <div>Administrateur: {this.state.owner}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}